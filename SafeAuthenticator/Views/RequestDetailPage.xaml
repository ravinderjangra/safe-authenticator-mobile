<?xml version="1.0" encoding="utf-8"?>

<pages:PopupPage xmlns="http://xamarin.com/schemas/2014/forms"
                 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                 x:Class="SafeAuthenticator.Views.RequestDetailPage"
                 xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
                 xmlns:animations="clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup"
                 xmlns:behaviour="clr-namespace:SafeAuthenticator.Controls.Behaviour"
                 xmlns:controls="clr-namespace:SafeAuthenticator.Controls"
                 xmlns:converters="clr-namespace:SafeAuthenticator.Controls.Converters;assembly=SafeAuthenticator"
                 CloseWhenBackgroundIsClicked="False">

    <pages:PopupPage.Animation>
        <animations:ScaleAnimation
            PositionIn="Center"
            PositionOut="Center"
            ScaleIn="1.2"
            ScaleOut="0.8"
            DurationIn="400"
            DurationOut="300"
            EasingIn="SinOut"
            EasingOut="SinIn"
            HasBackgroundAnimation="True" />
    </pages:PopupPage.Animation>

    <pages:PopupPage.Resources>
        <ResourceDictionary>
            <converters:InverseBooleanConverter x:Key="InverseBoolean" />
        </ResourceDictionary>
    </pages:PopupPage.Resources>

    <StackLayout VerticalOptions="Center"
                 Padding="20,0"
                 HorizontalOptions="FillAndExpand">

        <Frame Padding="0"
               BackgroundColor="White">

            <StackLayout Spacing="10"
                         Padding="16"
                         HeightRequest="250">
                <StackLayout.Triggers>
                    <MultiTrigger TargetType="StackLayout">
                        <MultiTrigger.Conditions>
                            <BindingCondition
                                Binding="{Binding Containers.Count, Converter={StaticResource IsCollectionEmptyConverter}}"
                                Value="true" />
                            <BindingCondition
                                Binding="{Binding MData.Count, Converter={StaticResource IsCollectionEmptyConverter}}"
                                Value="true" />
                        </MultiTrigger.Conditions>
                        <Setter Property="HeightRequest" Value="140" />
                    </MultiTrigger>
                </StackLayout.Triggers>

                <StackLayout HorizontalOptions="FillAndExpand" Orientation="Horizontal">
                    <Label HorizontalTextAlignment="Center"
                           HorizontalOptions="CenterAndExpand"
                           Margin="20, 0"
                           FontSize="16">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding AppName}" FontSize="16" FontAttributes="Bold" />
                                <Span Text="{Binding SecondaryTitle}" FontSize="13" />
                            </FormattedString>
                        </Label.FormattedText>
                        <Label.Triggers>
                            <DataTrigger TargetType="Label"
                                         Binding="{Binding IsUnregisteredRequest}"
                                         Value="true">
                                <Setter Property="Text" Value="An app is requesting access" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>

                    <Image Source="info"
                           HeightRequest="15"
                           WidthRequest="15"
                           x:Name="InfoIcon"
                           VerticalOptions="Center"
                           HorizontalOptions="End"
                           IsVisible="{Binding IsUnregisteredRequest, Converter={StaticResource InverseBoolean}}"
                           Margin="0,0,0,0"/>
                </StackLayout>

                <StackLayout x:Name="AppDetailsStackLayout" IsVisible="False" Margin="10,0">
                    <Label FontSize="12" TextColor="Gray">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Vendor: " TextColor="Black" />
                                <Span Text="{Binding AppVendor}" />
                                <Span Text="&#10;AppId: " TextColor="Black" />
                                <Span Text="{Binding AppId}" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                </StackLayout>

                <ListView x:Name="ContainerPermissionListView"
                          HasUnevenRows="True"
                          SeparatorVisibility="None"
                          IsVisible="{Binding IsMDataRequest, Converter={StaticResource InverseBoolean}}"
                          ItemsSource="{Binding Containers}">

                    <ListView.Behaviors>
                        <behaviour:ListViewNoSelectionBehavior />
                    </ListView.Behaviors>

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <controls:ContainerPermissionViewCell />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <ListView x:Name="MDataPermissionListView"
                          HasUnevenRows="True"
                          SeparatorVisibility="None"
                          IsVisible="{Binding IsMDataRequest}"
                          ItemsSource="{Binding MData}">

                    <ListView.Behaviors>
                        <behaviour:ListViewNoSelectionBehavior />
                    </ListView.Behaviors>

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <controls:MDataPermissionViewCell />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <StackLayout Orientation="Horizontal">

                    <Button x:Name="DenyButton"
                            Text="DENY"
                            HorizontalOptions="EndAndExpand"
                            TextColor="{StaticResource Primary}"
                            Clicked="Send_Response"
                            HeightRequest="39"
                            WidthRequest="85"
                            BackgroundColor="Transparent" />

                    <Button x:Name="AllowButton"
                            Text="ALLOW"
                            HorizontalOptions="End"
                            BackgroundColor="{StaticResource Primary}"
                            Clicked="Send_Response"
                            HeightRequest="39"
                            WidthRequest="85" />
                </StackLayout>

            </StackLayout>
        </Frame>
    </StackLayout>
</pages:PopupPage>
